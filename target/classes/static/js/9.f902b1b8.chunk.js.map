{"version":3,"sources":["store/modules/application/app.action.js","components/common/GridAction.js","pages/AccessRights.js"],"names":["showLoader","type","SHOW_LOADING","hideLoader","HIDE_LOADING","formData","SET_FORM_DATA","ActionIcons","React","memo","data","handlRowClick","props","className","view","overlay","id","icon","faEye","onClick","edit","faEdit","list","faList","delete","faTrash","lang","require","AccessRights","useDispatch","useHistory","useState","left","panelWidth","roles","menus","option","moduleOptions","menuActionsOptions","chips","background","multiStyle","aria-label","to","home","aria-current","accessRights","md","span","Header","Body","formik","sm","sx","htmlFor","role","as","name","value","response","map","roleID","modules","options","displayValue","style","menuAccessRights","menu","index","parentID","faCheck","isLeaf"],"mappings":"wGAAA,kHAGaA,EAAa,iBAAO,CAACC,KAAMC,MAC3BC,EAAa,iBAAO,CAACF,KAAMG,MAC3BC,EAAW,SAACA,GAAD,MAAe,CAACJ,KAAMK,IAAgBD,c,iJCCjDE,EAAcC,IAAMC,MAAK,YAAwC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,cAAkBC,EAAY,wCACzE,OACI,sBAAKC,UAAU,mBAAf,UACKD,EAAME,MACH,cAAC,IAAD,CACIC,QAAU,cAAC,IAAD,CAASC,GAAG,eAAZ,kBADd,SAGA,cAAC,IAAD,CAAiBC,KAAMC,IAAOC,QAAS,kBAAMR,EAAcD,EAAM,aAGpEE,EAAMQ,MACH,cAAC,IAAD,CACIL,QAAU,cAAC,IAAD,CAASC,GAAG,eAAZ,kBADd,SAGD,cAAC,IAAD,CAAiBC,KAAMI,IAAQF,QAAS,kBAAMR,EAAcD,EAAM,aAGpEE,EAAMU,MACH,cAAC,IAAD,CACIP,QAAU,cAAC,IAAD,CAASC,GAAG,eAAZ,kBADd,SAGA,cAAC,IAAD,CAAiBC,KAAMM,IAAQJ,QAAS,kBAAMR,EAAcD,EAAM,aAGrEE,EAAMY,QACH,cAAC,IAAD,CACIT,QAAU,cAAC,IAAD,CAASC,GAAG,iBAAZ,oBADd,SAGA,cAAC,IAAD,CAAiBC,KAAMQ,IAASN,QAAS,kBAAMR,EAAcD,EAAM,sB,8KCnB7EgB,EAAOC,EAAQ,KA2PNC,UAzPM,WACAC,cACDC,cADhB,IAGA,EAAqBC,mBAAS,CAACC,KAAM,KAA9BC,EAAP,oBAEMC,EACN,CACI,YAAe,UACf,QAAW,+BACX,OAAU,KACV,YAAe,KACf,SAAY,CACR,CACI,GAAM,EACN,OAAU,KACV,KAAQ,kBACR,OAAU,UAEd,CACI,GAAM,EACN,OAAU,KACV,KAAQ,aACR,OAAU,UAEd,CACI,GAAM,EACN,OAAU,KACV,KAAQ,QACR,OAAU,YA+BhBC,EACN,CACI,YAAe,UACf,QAAW,+BACX,OAAU,KACV,YAAe,KACf,SAAY,CACR,CACI,IAAO,EACP,SAAY,IACZ,KAAQ,cACR,OAAU,KACV,OAAU,UAEd,CACI,IAAO,EACP,SAAY,IACZ,KAAQ,kBACR,OAAU,KACV,OAAU,UAEd,CACI,IAAO,EACP,SAAY,IACZ,KAAQ,kBACR,OAAU,KACV,OAAU,UAEd,CACI,IAAO,EACP,SAAY,IACZ,KAAQ,sBACR,OAAU,MACV,OAAU,UAEd,CACI,IAAO,EACP,SAAY,IACZ,KAAQ,sBACR,OAAU,MACV,OAAU,UAEd,CACI,IAAO,EACP,SAAY,IACZ,KAAQ,sBACR,OAAU,MACV,OAAU,UAEd,CACI,IAAO,EACP,SAAY,IACZ,KAAQ,cACR,OAAU,KACV,OAAU,YAuCtB,EAAwBJ,mBAAS,CAAEK,OAtH/B,CAEI,CACI,SAAY,KACZ,KAAQ,MAEZ,CACI,SAAY,KACZ,KAAQ,WAEZ,CACI,SAAY,KACZ,KAAQ,aAEZ,CACI,SAAY,KACZ,KAAQ,iBAEZ,CACI,SAAY,KACZ,KAAQ,YAkGbC,EAAP,oBACA,EAA6BN,mBAAS,CAAEK,OAlCpC,CAEI,CACI,IAAO,EACP,KAAQ,MACR,OAAU,UAEd,CACI,IAAO,EACP,KAAQ,OACR,OAAU,UAEd,CACI,IAAO,EACP,KAAQ,SACR,OAAU,UAEd,CACI,IAAO,EACP,KAAQ,UACR,OAAU,UAEd,CACI,IAAO,EACP,KAAQ,SAEZ,CACI,IAAO,EACP,KAAQ,OACR,OAAU,aAKfE,EAAP,oBAEA,EAAqBP,mBAAS,CAC1BQ,MAAO,CACHC,WAAY,aAFbC,EAAP,oBAMA,OACI,qCACI,qBAAK5B,UAAU,YAAf,SACI,qBAAK6B,aAAW,aAAhB,SACI,qBAAI7B,UAAU,aAAd,UACI,oBAAIA,UAAU,kCAAd,SAAgD,cAAC,IAAD,CAAMA,UAAU,cAAc8B,GAAG,aAAjC,SAA+CjB,EAAKkB,SACpG,oBAAI/B,UAAU,yCAAyCgC,eAAa,OAApE,SAA4EnB,EAAKoB,sBAI7F,cAAC,IAAD,UACA,cAAC,IAAD,CAAKC,GAAI,CAACC,KAAMf,EAAWD,MAA3B,SACI,eAAC,IAAD,WACA,cAAC,IAAKiB,OAAN,4BAGA,cAAC,IAAKC,KAAN,UACI,cAAC,IAAD,UACC,SAAAC,GAAM,OACH,eAAC,IAAD,WACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAKJ,GAAI,EAAGK,GAAI,EAAGC,GAAI,GAAvB,SACA,sBAAKxC,UAAU,aAAf,UACQ,uBAAOA,UAAU,kBAAkByC,QAAQ,OAA3C,SAAmD5B,EAAK6B,OACxD,eAAC,IAAD,CAAOC,GAAG,SAASC,KAAK,OAAOzC,GAAG,OAAOH,UAAU,eAAnD,UACI,wBAAQ6C,MAAM,GAAd,iBACCxB,EAAMyB,SAASC,KAAI,SAACL,GAAD,OACpB,wBAAQG,MAAOH,EAAKM,OAApB,SAA6BN,EAAKE,kBAK9C,cAAC,IAAD,CAAKV,GAAI,EAAGK,GAAI,EAAGC,GAAI,GAAvB,SACI,sBAAKxC,UAAU,aAAf,UACI,uBAAOA,UAAU,kBAAkByC,QAAQ,UAA3C,SAAsD5B,EAAKoC,UAC3D,cAAC,cAAD,CACAC,QAAS1B,EAAcD,OACvB4B,aAAa,OACbC,MAAOxB,YAKnB,eAAC,IAAD,WACI,cAAC,IAAKQ,OAAN,UACI,iCAASvB,EAAKwC,qBAElB,cAAC,IAAKhB,KAAN,UAEKf,EAAMwB,SAASC,KAAI,SAACO,EAAMC,GAAP,OAChB,eAAC,IAAD,WACI,cAAC,IAAD,CAAKrB,GAAI,EAAT,kBAGA,cAAC,IAAD,CAAKA,GAAI,EAAT,SACI,wBAAOlC,UAAW,+BAAiCsD,EAAKE,SAAxD,UAAkE,cAAC,IAAD,CAAiBpD,KAAMqD,MAAzF,IAAsGH,EAAKV,UAE/G,cAAC,IAAD,CAAKV,GAAI,EAAT,SACiB,OAAfoB,EAAKI,QACH,qBAAK1D,UAAU,aAAf,SACI,cAAC,cAAD,CACAkD,QAASzB,EAAmBF,OAC5B4B,aAAa,OACbC,MAAOxB,QAKf,cAAC,IAAD,CAAKM,GAAI,EAAT","file":"static/js/9.f902b1b8.chunk.js","sourcesContent":["import { SHOW_LOADING, HIDE_LOADING, SET_FORM_DATA, SET_MODULE_DATA, TOGGLE_SUB_MODULE,  TOGGLE_SUB_MODULE_FORM, ACTIVE_SUB_MODULE } from './app.types';\n\n\nexport const showLoader = () => ({type: SHOW_LOADING });\nexport const hideLoader = () => ({type: HIDE_LOADING });\nexport const formData = (formData) => ({type: SET_FORM_DATA , formData});\nexport const moduleData = (moduleData) => ({type: SET_MODULE_DATA , moduleData});\nexport const toggleSubModule = (value) => ({type: TOGGLE_SUB_MODULE , value});\nexport const toggleSubModuleForm = (value) => ({type: TOGGLE_SUB_MODULE_FORM , value});\nexport const activeSubModule = (value) => ({type: ACTIVE_SUB_MODULE , value});\n","import React from 'react';\nimport { OverlayTrigger, Tooltip, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faTrash, faEdit, faList } from '@fortawesome/free-solid-svg-icons';\nimport PropTypes from 'prop-types';\n\nexport const ActionIcons = React.memo(({ data, handlRowClick, ...props }) => {\n    return (\n        <div className=\"grid-action-icon\">\n            {props.view && (\n                <OverlayTrigger\n                    overlay={ <Tooltip id=\"tooltip-view\">View</Tooltip> }\n                >\n                <FontAwesomeIcon icon={faEye} onClick={() => handlRowClick(data, \"view\")} />\n                </OverlayTrigger>)\n            }\n            {props.edit && (\n                <OverlayTrigger\n                    overlay={ <Tooltip id=\"tooltip-edit\">Edit</Tooltip> }\n                >\n               <FontAwesomeIcon icon={faEdit} onClick={() => handlRowClick(data, \"edit\")} />\n                </OverlayTrigger>)\n            }\n            {props.list && (\n                <OverlayTrigger\n                    overlay={ <Tooltip id=\"tooltip-list\">List</Tooltip> }\n                >\n                <FontAwesomeIcon icon={faList} onClick={() => handlRowClick(data, \"list\")} />\n                </OverlayTrigger>)\n            }\n            {props.delete && (\n                <OverlayTrigger\n                    overlay={ <Tooltip id=\"tooltip-delete\">Delete</Tooltip> }\n                >\n                <FontAwesomeIcon icon={faTrash} onClick={() => handlRowClick(data, \"delete\")} />\n                </OverlayTrigger>)\n            }            \n        </div>\n    )\n})\n\n\nexport const ActionButtons = React.memo(({ data, handlRowClick, ...props }) => {\n    console.log(\"Render action button\")\n    return (\n        <div className=\"grid-action-icon\">\n            {props.view && (\n                <Button variant=\"info\" size=\"sm\" onClick={() => handlRowClick(data, \"view\")}>\n                    View\n              </Button>)  \n            }\n            {props.edit && (\n                <Button variant=\"warning\" size=\"sm\" onClick={() => handlRowClick(data, \"edit\")}>\n                        Edit\n                </Button>)\n            }\n            {props.delete && (\n               <Button variant=\"danger\" size=\"sm\" onClick={() => handlRowClick(data, \"delete\")}>\n                        Delete\n                </Button>)\n            }\n        </div>\n    )\n})\nActionIcons.propTypes = {\n    data: PropTypes.object,\n    handlRowClick : PropTypes.func\n}\n\nActionButtons.propTypes = {\n    data: PropTypes.object,\n    handlRowClick : PropTypes.func\n}\n","\nimport { Link } from \"react-router-dom\";\nimport { useState, useCallback } from 'react';\nimport {useDispatch} from 'react-redux';\nimport {Row, Col, Card, Button, InputGroup, FormControl} from 'react-bootstrap';\nimport {ActionIcons} from '../components/common/GridAction';\nimport {useHistory} from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport { Field } from 'formik';\nimport {getUsers} from '../api/account.api';\nimport {formData} from '../store/modules/application/app.action';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { BorderAll } from \"@material-ui/icons\";\nconst lang = require('../language/en.json');\n\nconst AccessRights = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    \n    const [panelWidth] = useState({left: 12});\n\n    const roles = \n    {\n        \"messageType\": \"SUCCESS\",\n        \"message\": \"Roles retrieved successfully\",\n        \"errors\": null,\n        \"namedErrors\": null,\n        \"response\": [\n            {\n                \"id\": 1,\n                \"roleID\": \"01\",\n                \"name\": \"Account Officer\",\n                \"status\": \"Active\"\n            },\n            {\n                \"id\": 2,\n                \"roleID\": \"02\",\n                \"name\": \"HR Officer\",\n                \"status\": \"Active\"\n            },\n            {\n                \"id\": 3,\n                \"roleID\": \"03\",\n                \"name\": \"Clerk\",\n                \"status\": \"Active\"\n            }\n        ]\n    }\n\n    const modules = \n        [\n        \n            {\n                \"moduleID\": \"01\",\n                \"name\": \"HR\"\n            },\n            {\n                \"moduleID\": \"02\",\n                \"name\": \"Finance\"\n            },\n            {\n                \"moduleID\": \"03\",\n                \"name\": \"Academics\"\n            },\n            {\n                \"moduleID\": \"04\",\n                \"name\": \"Establishment\"\n            },\n            {\n                \"moduleID\": \"05\",\n                \"name\": \"Other\"\n            }\n      \n        ]\n    \n    const menus = \n    {\n        \"messageType\": \"SUCCESS\",\n        \"message\": \"Menus retrieved successfully\",\n        \"errors\": null,\n        \"namedErrors\": null,\n        \"response\": [\n            {\n                \"sNo\": 1,\n                \"parentID\": \"0\",\n                \"name\": \"Menu Item 1\",\n                \"isLeaf\": \"NO\",\n                \"status\": \"Active\"\n            },\n            {\n                \"sNo\": 2,\n                \"parentID\": \"1\",\n                \"name\": \"Sub Menu Item 1\",\n                \"isLeaf\": \"NO\",\n                \"status\": \"Active\"\n            },\n            {\n                \"sNo\": 3,\n                \"parentID\": \"1\",\n                \"name\": \"Sub Menu Item 1\",\n                \"isLeaf\": \"NO\",\n                \"status\": \"Active\"\n            },\n            {\n                \"sNo\": 4,\n                \"parentID\": \"3\",\n                \"name\": \"Sub Sub Menu Item 1\",\n                \"isLeaf\": \"YES\",\n                \"status\": \"Active\"\n            },\n            {\n                \"sNo\": 5,\n                \"parentID\": \"3\",\n                \"name\": \"Sub Sub Menu Item 1\",\n                \"isLeaf\": \"YES\",\n                \"status\": \"Active\"\n            },\n            {\n                \"sNo\": 6,\n                \"parentID\": \"3\",\n                \"name\": \"Sub Sub Menu Item 1\",\n                \"isLeaf\": \"YES\",\n                \"status\": \"Active\"\n            },\n            {\n                \"sNo\": 7,\n                \"parentID\": \"0\",\n                \"name\": \"Menu Item 2\",\n                \"isLeaf\": \"NO\",\n                \"status\": \"Active\"\n            }\n        ]\n    }\n\n    const menuActions = \n        [\n       \n            {\n                \"sNo\": 1,\n                \"name\": \"Add\",\n                \"status\": \"Active\"\n            },\n            {\n                \"sNo\": 2,\n                \"name\": \"Edit\",\n                \"status\": \"Active\"\n            },\n            {\n                \"sNo\": 3,\n                \"name\": \"Delete\",\n                \"status\": \"Active\"\n            },\n            {\n                \"sNo\": 4,\n                \"name\": \"Approve\",\n                \"status\": \"Active\"\n            },\n            {\n                \"sNo\": 5,\n                \"name\": \"Print\",\n            },\n            {\n                \"sNo\": 6,\n                \"name\": \"View\",\n                \"status\": \"Active\"\n            }\n        ]\n   \n    const [moduleOptions] = useState({ option: modules  } );\n    const [menuActionsOptions] = useState({ option: menuActions  } );\n\n    const [multiStyle] = useState({ \n        chips: {\n            background: '#fb9d35'\n        }\n    } );\n  \n    return (\n        <>\n            <div className=\"container\">\n                <nav aria-label=\"breadcrumb\">\n                    <ol className=\"breadcrumb\">\n                        <li className=\"theme-font-size breadcrumb-item\"><Link className=\"theme-color\" to=\"/dashboard\">{lang.home}</Link></li>\n                        <li className=\"theme-font-size breadcrumb-item active\" aria-current=\"page\">{lang.accessRights}</li>\n                    </ol>\n                </nav>\n            </div>\n            <Row>\n            <Col md={{span: panelWidth.left}}>\n                <Card>\n                <Card.Header>\n                    Access Rights\n                </Card.Header>\n                <Card.Body> \n                    <Formik>\n                    {formik => (\n                        <Form>\n                            <Row>\n                                <Col md={6} sm={6} sx={12}>\n                                <div className='form-group'>\n                                        <label className=\"theme-font-size\" htmlFor=\"role\">{lang.role}</label> \n                                        <Field as=\"select\" name=\"role\" id='role' className='form-control'>\n                                            <option value=\"\">---</option>\n                                            {roles.response.map((role) => (  \n                                            <option value={role.roleID}>{role.name}</option>\n                                            ))}  \n                                        </Field>\n                                    </div>\n                                </Col>\n                                <Col md={6} sm={6} sx={12}>\n                                    <div className='form-group'>\n                                        <label className=\"theme-font-size\" htmlFor=\"modules\">{lang.modules}</label> \n                                        <Multiselect\n                                        options={moduleOptions.option} // Options to display in the dropdown\n                                        displayValue=\"name\"\n                                        style={multiStyle}\n                                        />\n                                    </div>\n                                </Col>\n                            </Row>\n                            <Card>\n                                <Card.Header>\n                                    <center>{lang.menuAccessRights}</center>\n                                </Card.Header>\n                                <Card.Body>\n                                   \n                                    {menus.response.map((menu, index) => (  \n                                        <Row>\n                                            <Col md={2}>\n                                                &nbsp;\n                                            </Col>\n                                            <Col md={4}>\n                                                <label className={\"theme-font-size parentClass_\" + menu.parentID}><FontAwesomeIcon icon={faCheck} /> {menu.name}</label>\n                                            </Col>\n                                            <Col md={4}>\n                                            { menu.isLeaf == 'YES' && \n                                                <div className='form-group'>\n                                                    <Multiselect\n                                                    options={menuActionsOptions.option} // Options to display in the dropdown\n                                                    displayValue=\"name\"\n                                                    style={multiStyle}\n                                                    />\n                                                </div>\n                                            }\n                                            </Col>\n                                            <Col md={2}>\n                                                &nbsp;\n                                            </Col>\n                                        \n                                        </Row>\n                                    ))}\n                                </Card.Body>\n                            </Card> \n                        </Form>\n                    )}\n                    </Formik>\n\n                </Card.Body>\n                </Card>\n            </Col>\n            </Row>\n        </>\n    )\n}\nexport default AccessRights;"],"sourceRoot":""}